{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","params","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","JSON","stringify","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptoList","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","gutter","map","crypto","xs","sm","lg","uuid","rank","extra","iconUrl","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","id","news","idx","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6f06249e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport icon from \"../images/cryptocurrency.png\";\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          {/* <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item> */}\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"9c798a43cbmsh370af88385b9732p1791f4jsnbe8f7e361a6e\",\r\n};\r\n\r\n//const baseUrl = \"https://coinranking1.p.rapidapi.com/coin/Qwsogvtv82FCd/\";\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url, params) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n  params,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(\"/coins\", `limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history`, `timePeriod=${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Cryptocurrencies, News } from \".\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n  if (isFetching) return \"isLoading\";\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Cryptocurrencies\"\r\n            value={JSON.stringify(globalStats?.total)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats?.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Caps\"\r\n            value={millify(globalStats?.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats?.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats?.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n\r\n      <Cryptocurrencies simplified />\r\n\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptoList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState(cryptoList?.data?.coins);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptoList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    setCryptos(filteredData);\r\n  }, [cryptoList?.data?.coins, searchTerm]);\r\n\r\n  console.log(cryptoList);\r\n\r\n  if (isFetching) return \"Loading...\";\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((crypto) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={crypto.uuid}>\r\n            <Link to={`/crypto/${crypto.uuid}`}>\r\n              <Card\r\n                title={`${crypto.rank}.${crypto.name}`}\r\n                extra={\r\n                  <img className=\"crypto-image\" src={crypto.iconUrl} alt=\"\" />\r\n                }\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(crypto.price)}</p>\r\n                <p>Market Cap: {millify(crypto.marketCap)}</p>\r\n                <p>Daily Change: {millify(crypto.change)}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${\r\n        cryptoDetails?.allTimeHigh?.price &&\r\n        millify(cryptoDetails?.allTimeHigh?.price)\r\n      }`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.circulating &&\r\n        millify(cryptoDetails?.supply?.circulating)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  console.log(data);\r\n  if (isFetching) return \"loading\";\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Timeperiod\"\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails?.price)}\r\n        coinName={cryptoDetails?.name}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Stats Info\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"d7ee755c18msh042f90e58171aa8p1679c5jsn31324987de7d\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage =\r\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory: newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  if (!cryptoNews?.value) return \"Loading...\";\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase())\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {data?.data?.coins.map((coin) => (\r\n              <Option value={coin.name} key={coin.id}>\r\n                {coin.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, idx) => (\r\n        <Col xs={24} sm={12} lg={8} key={idx}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt=\"news\"\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description > 100\r\n                  ? `${news.description.substring(0, 100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={\r\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                      demoImage\r\n                    }\r\n                    alt=\"news\"\r\n                  />\r\n                  <Text className=\"provider-name\">\r\n                    {news.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\n\r\nimport {\r\n  Navbar,\r\n  Exchanges,\r\n  Homepage,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Homepage />\r\n              </Route>\r\n              {/* <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route> */}\r\n              <Route exact path=\"/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptoverse <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\n//import Test from \"./components/Test\";\r\nimport store from \"./app/store\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n      {/* <Test /> */}\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}